version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-vaggpinel}
      - UPLOAD_DIR=${UPLOAD_DIR:-/app/data/pdf_files}
      - SPACY_MODEL_NAME=${SPACY_MODEL_NAME:-en_core_sci_sm}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - EMBEDDING_DEVICE=${EMBEDDING_DEVICE:-cpu}
      - LM_STUDIO_API_BASE=${LM_STUDIO_API_BASE:-http://host.docker.internal:1234/v1}
      - LM_STUDIO_API_KEY=${LM_STUDIO_API_KEY:-lm-studio}
      - DEFAULT_LLM_TEMP=${DEFAULT_LLM_TEMP:-0.1}
      - DEFAULT_LLM_MAX_TOKENS=${DEFAULT_LLM_MAX_TOKENS:-512}
      - TOPIC_LLM_MAX_TOKENS=${TOPIC_LLM_MAX_TOKENS:-100}
      - INGEST_BATCH_SIZE=${INGEST_BATCH_SIZE:-20}
      - TOPIC_EXTRACTION_CHUNK_SIZE=${TOPIC_EXTRACTION_CHUNK_SIZE:-3500}
      - TOPIC_EXTRACTION_CONCURRENCY=${TOPIC_EXTRACTION_CONCURRENCY:-10}
      - MAX_TOPICS_PER_DOC=${MAX_TOPICS_PER_DOC:-32}
      - RAG_RETRIEVER_K=${RAG_RETRIEVER_K:-6}
      - TEXT_CHUNK_SIZE=${TEXT_CHUNK_SIZE:-1000}
      - TEXT_CHUNK_OVERLAP=${TEXT_CHUNK_OVERLAP:-200}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=${LOG_FILE:-/app/data/app.log}
      - AZURE_AI_API_KEY=${AZURE_AI_API_KEY:-azure_ai_api_key_here}
      - REDIS_CONNECT_TIMEOUT=${REDIS_CONNECT_TIMEOUT:-5}
      - REDIS_SOCKET_TIMEOUT=${REDIS_SOCKET_TIMEOUT:-5}
      - REDIS_JOB_EXPIRY_SECONDS=${REDIS_JOB_EXPIRY_SECONDS:-86400}
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:latest
    ports:
      - "${NEO4J_BOLT_PORT:-7687}:7687"
      - "${NEO4J_HTTP_PORT:-7474}:7474"
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-vaggpinel}
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - ./neo4j/logs:/logs
      - ./neo4j/import:/import
      - ./neo4j/plugins:/plugins
    tmpfs:
      - /data
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:7474 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10

  frontend:
    build:
      context: ./src/frontend
    ports:
      - "${FRONTEND_PORT:-8501}:8501"
    volumes:
      - ./src/frontend:/app/src/frontend
    environment:
      - BACKEND_URL=http://backend:8000
      - STREAMLIT_SERVER_PORT=8501
    depends_on:
      backend:
        condition: service_started
